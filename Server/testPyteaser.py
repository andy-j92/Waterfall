# coding=utf-8
from unittest import TestCase, main as unittest_main
from pyteaser import Summarize, SummarizeUrl

class TestSummarize(TestCase):
    def testText(self):
        article_title = u'Framework for Partitioning and Execution of Data Stream Applications in Mobile Cloud Computing'
        article_text = u'The contribution of cloud computing and mobile computing technologies lead to the newly emerging mobile cloud com- puting paradigm. Three major approaches have been pro- posed for mobile cloud applications: 1) extending the access to cloud services to mobile devices; 2) enabling mobile de- vices to work collaboratively as cloud resource providers; 3) augmenting the execution of mobile applications on portable devices using cloud resources. In this paper, we focus on the third approach in supporting mobile data stream applica- tions. More specifically, we study how to optimize the com- putation partitioning of a data stream application between mobile and cloud to achieve maximum speed/throughput in processing the streaming data. To the best of our knowledge, it is the first work to study the partitioning problem for mobile data stream applica- tions, where the optimization is placed on achieving high throughput of processing the streaming data rather than minimizing the makespan of executions as in other appli- cations. We first propose a framework to provide runtime support for the dynamic computation partitioning and exe- cution of the application. Different from existing works, the framework not only allows the dynamic partitioning for a single user but also supports the sharing of computation in- stances among multiple users in the cloud to achieve efficient utilization of the underlying cloud resources. Meanwhile, the framework has better scalability because it is designed on the elastic cloud fabrics. Based on the framework, we design a genetic algorithm for optimal computation parti- tion. Both numerical evaluation and real world experiment have been performed, and the results show that the par- titioned application can achieve at least two times better performance in terms of throughput than the application without partitioning.'

        summarised_article_text = [u'The contribution of cloud computing and mobile computing technologies lead to the newly emerging mobile cloud com- puting paradigm.', u'Three major approaches have been pro- posed for mobile cloud applications: 1) extending the access to cloud services to mobile devices; 2) enabling mobile de- vices to work collaboratively as cloud resource providers; 3) augmenting the execution of mobile applications on portable devices using cloud resources.', u'In this paper, we focus on the third approach in supporting mobile data stream applica- tions.']

        #self.assertEqual(Summarize(article_title, article_text),
                         #summarised_article_text)
    def testURLs(self):
        urls = (u'http://www.huffingtonpost.com/2013/11/22/twitter-forward-secrecy_n_4326599.html',
                u'http://www.bbc.co.uk/news/world-europe-30035666',
                u'http://www.bbc.co.uk/news/magazine-29631332')

        #just make sure it doesn't crash
        #for url in urls: #Just to check commit and push
        #summaries = SummarizeUrl(url)
            #print(summaries)

        article_title = u'Framework for Partitioning and Execution of Data Stream Applications in Mobile Cloud Computing'
        article_text = u'The contribution of cloud computing and mobile computing technologies lead to the newly emerging mobile cloud com- puting paradigm. Three major approaches have been pro- posed for mobile cloud applications: 1) extending the access to cloud services to mobile devices; 2) enabling mobile de- vices to work collaboratively as cloud resource providers; 3) augmenting the execution of mobile applications on portable devices using cloud resources. In this paper, we focus on the third approach in supporting mobile data stream applica- tions. More specifically, we study how to optimize the com- putation partitioning of a data stream application between mobile and cloud to achieve maximum speed/throughput in processing the streaming data. To the best of our knowledge, it is the first work to study the partitioning problem for mobile data stream applica- tions, where the optimization is placed on achieving high throughput of processing the streaming data rather than minimizing the makespan of executions as in other appli- cations. We first propose a framework to provide runtime support for the dynamic computation partitioning and exe- cution of the application. Different from existing works, the framework not only allows the dynamic partitioning for a single user but also supports the sharing of computation in- stances among multiple users in the cloud to achieve efficient utilization of the underlying cloud resources. Meanwhile, the framework has better scalability because it is designed on the elastic cloud fabrics. Based on the framework, we design a genetic algorithm for optimal computation parti- tion. Both numerical evaluation and real world experiment have been performed, and the results show that the par- titioned application can achieve at least two times better performance in terms of throughput than the application without partitioning.'

        cv_text = 'ENGGEN 403 - ROL 2 - Nipoon Patel ñ 8814985 ENGGEN 403 is moving more and more away from the typical engineering courses. I feel this course is making me feel and think like a businessman. More importantly ëwhyí we do things rather than ëhowí we go about implementing things. For example, if we are looking to release a new product we must think of why we are releasing this product? How will this impact our company? What will the impact be concerning profit/loss? We consider lesser about how we are going to go and implement this product. This I feel is a significant difference in thinking compared to the other courses. Most engineering courses only teach us ëhowí we go about implementing but not the consequences because of it. I fancied how in assignment one everyone had to come up with their own different idea. Even though it was tough initially, it was a great exercise which made us think outside the box. One thing that was interesting to notice was that individuals usually come up with an idea from the same specialisation. For example, chemmat students thought of some sort of manufacturing plant whereas software students thought of mobile app or website. This demonstrates how our brain revolves around what we do in our daily life. Assignment two was also fascinating and something very different. I liked how we were made to form a profit/loss statement; it was something I had never done before and was enjoyable to learn. I have honestly enjoyed listening to the guest lecturers, especially from EY. They presented many good points like ìEQ is more important than IQî or ìCEO of the company isnít always the smartest person but must have a great EQî. Points like these really made me think about how I am approaching my career. I always wanted to become a tech nerd who was best programmer in the room. But ENGGEN is making me realise that a good engineer is not someone who is only good at programming, but someone who can communicate and socialise with other individuals. Hence, have that high EQ. The systems project is slowing creeping up, and I am surprised that the content material has still not moved to preparing us for the systems week. Last year in ENGGEN 304 Rob and Garry had started presenting about the systems week several lectures in advance. Maybe this year will be different as ENGGEN 403 is meant to be an ëadvancedí course and hence we will not be spoon fed as much. I am looking forward to what will the topic be this year and who all will be in my group. It is always a great experience working with members from different specialisations because we all think from different aspects and bring a different point of views to the project. The lecture content and assignments are making me think outside the box and this is something I really fancy. I hope the second half of ENGGEN is just as intriguing as the first half. '
        #SummarizeUrl("http://www.huffingtonpost.com/2013/11/22/twitter-forward-secrecy_n_4326599.html")

        print(Summarize(cv_text))
if __name__ == '__main__':
     unittest_main()
