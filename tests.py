from unittest import TestCase, main as unittest_main
from pyteaser import Summarize, SummarizeUrl

class TestSummarize(TestCase):
    def testText(self):
        article_title = u'Framework for Partitioning and Execution of Data Stream Applications in Mobile Cloud Computing'
        article_text = u'The contribution of cloud computing and mobile computing technologies lead to the newly emerging mobile cloud com- puting paradigm. Three major approaches have been pro- posed for mobile cloud applications: 1) extending the access to cloud services to mobile devices; 2) enabling mobile de- vices to work collaboratively as cloud resource providers; 3) augmenting the execution of mobile applications on portable devices using cloud resources. In this paper, we focus on the third approach in supporting mobile data stream applica- tions. More specifically, we study how to optimize the com- putation partitioning of a data stream application between mobile and cloud to achieve maximum speed/throughput in processing the streaming data. To the best of our knowledge, it is the first work to study the partitioning problem for mobile data stream applica- tions, where the optimization is placed on achieving high throughput of processing the streaming data rather than minimizing the makespan of executions as in other appli- cations. We first propose a framework to provide runtime support for the dynamic computation partitioning and exe- cution of the application. Different from existing works, the framework not only allows the dynamic partitioning for a single user but also supports the sharing of computation in- stances among multiple users in the cloud to achieve efficient utilization of the underlying cloud resources. Meanwhile, the framework has better scalability because it is designed on the elastic cloud fabrics. Based on the framework, we design a genetic algorithm for optimal computation parti- tion. Both numerical evaluation and real world experiment have been performed, and the results show that the par- titioned application can achieve at least two times better performance in terms of throughput than the application without partitioning.'

        summarised_article_text = [u'The contribution of cloud computing and mobile computing technologies lead to the newly emerging mobile cloud com- puting paradigm.', u'Three major approaches have been pro- posed for mobile cloud applications: 1) extending the access to cloud services to mobile devices; 2) enabling mobile de- vices to work collaboratively as cloud resource providers; 3) augmenting the execution of mobile applications on portable devices using cloud resources.', u'In this paper, we focus on the third approach in supporting mobile data stream applica- tions.']

        #self.assertEqual(Summarize(article_title, article_text),
                         #summarised_article_text)
    def testURLs(self):
        urls = (u'http://www.huffingtonpost.com/2013/11/22/twitter-forward-secrecy_n_4326599.html',
                u'http://www.bbc.co.uk/news/world-europe-30035666',
                u'http://www.bbc.co.uk/news/magazine-29631332')

        #just make sure it doesn't crash
        #for url in urls: #Just to check commit and push
        #summaries = SummarizeUrl(url)
            #print(summaries)

        article_title = u'Framework for Partitioning and Execution of Data Stream Applications in Mobile Cloud Computing'
        article_text = u'The contribution of cloud computing and mobile computing technologies lead to the newly emerging mobile cloud com- puting paradigm. Three major approaches have been pro- posed for mobile cloud applications: 1) extending the access to cloud services to mobile devices; 2) enabling mobile de- vices to work collaboratively as cloud resource providers; 3) augmenting the execution of mobile applications on portable devices using cloud resources. In this paper, we focus on the third approach in supporting mobile data stream applica- tions. More specifically, we study how to optimize the com- putation partitioning of a data stream application between mobile and cloud to achieve maximum speed/throughput in processing the streaming data. To the best of our knowledge, it is the first work to study the partitioning problem for mobile data stream applica- tions, where the optimization is placed on achieving high throughput of processing the streaming data rather than minimizing the makespan of executions as in other appli- cations. We first propose a framework to provide runtime support for the dynamic computation partitioning and exe- cution of the application. Different from existing works, the framework not only allows the dynamic partitioning for a single user but also supports the sharing of computation in- stances among multiple users in the cloud to achieve efficient utilization of the underlying cloud resources. Meanwhile, the framework has better scalability because it is designed on the elastic cloud fabrics. Based on the framework, we design a genetic algorithm for optimal computation parti- tion. Both numerical evaluation and real world experiment have been performed, and the results show that the par- titioned application can achieve at least two times better performance in terms of throughput than the application without partitioning.'

        cv_text = u'Andy Jang Student Developer Applying for graduate position. Developer Experience. unity game development. made a simple game called react using C# in Unity3D in my spare time and published it in google play store. Working on another game using C# that is 70percent done. Summer internship at Olympic Software nov 2016 to feb 2016. Implemented front-end features on internal website using html/css and linked functionalities using C# with Razor. Worked on a solo project to create a bot that processed certain tasks based on the user input. Bot was made with microsoft bot framwork and LUIS. Implemented features on internal web applications using angularJS. Summar intership at YQ App, Nov 2015 to Feb 2016. In charge of creating new styles for one of the webpages in html/css. fixed bugs related to styling. Learnt basics of JavaScript and used it to make an automated css styling PHP page. Created click dummy webpage using React which was going to replace the current webpage. Learnt bash commands to navigate through Linux system and use Github and BitBucket. University Studies. In 3rd year, created a website using html,css and javascript and build a game using C# in Unity3D. In 2nd year, most of the assignments and projects were done using java. In 1st year, learnt basics of C. Continued to work in Olympic Software during univerity but only been in for a few times. Asked if I wanted to continue working with Olympic as a graduate and I answered yes but havent signed a contract yet.'
        print(Summarize(cv_text, "JavaScript"))
if __name__ == '__main__':
    unittest_main()
